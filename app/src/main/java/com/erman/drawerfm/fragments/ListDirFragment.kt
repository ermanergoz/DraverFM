package com.erman.drawerfm.fragmentsimport DirectoryDataimport android.content.Contextimport android.os.Bundleimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.core.view.isVisibleimport androidx.fragment.app.Fragmentimport androidx.recyclerview.widget.LinearLayoutManagerimport com.erman.drawerfm.Rimport com.erman.drawerfm.adapters.DirectoryRecyclerViewAdapterimport getDirectoryDataimport getFilesimport kotlinx.android.synthetic.main.file_list_fragment.*class ListDirFragment : Fragment() {    private lateinit var directoryRecyclerViewAdapter: DirectoryRecyclerViewAdapter    private lateinit var path: String    private lateinit var onClickCallback: OnItemClickListener    private var selectedPath = ""    interface OnItemClickListener {        fun onClick(directoryData: DirectoryData)        fun onLongClick(directoryData: DirectoryData)        fun bottomNavigationViewClick(navigationItemSelectedId: Int, selectedPath: String)    }    companion object {        fun buildFragment(path: String, isMarqueeEnabled: Boolean): ListDirFragment {            val fragment = ListDirFragment()            val argumentBundle = Bundle()            argumentBundle.putString("path", path)            argumentBundle.putBoolean("isMarqueeEnabled",isMarqueeEnabled)            fragment.arguments = argumentBundle            return fragment        }    }    override fun onAttach(context: Context) {        super.onAttach(context)        try {            onClickCallback = context as OnItemClickListener        } catch (e: Exception) {            throw Exception("${context} should implement com.erman.drawerfm.fragments.ListDirFragment.OnItemCLickListener")        }    }    override fun onCreateView(        inflater: LayoutInflater,        container: ViewGroup?,        savedInstanceState: Bundle?    ): View? {        return inflater.inflate(R.layout.file_list_fragment, container, false)    }    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        val filePath = arguments?.getString("path")        path = filePath.toString()        pathTextView.text = path        initViews()    }    private fun initViews() {        bottomNavigationView.isVisible=false        fileListRecyclerView.layoutManager = LinearLayoutManager(context)        directoryRecyclerViewAdapter = DirectoryRecyclerViewAdapter()        fileListRecyclerView.adapter = directoryRecyclerViewAdapter        directoryRecyclerViewAdapter.onClickListener = {            onClickCallback.onClick(it)        }        directoryRecyclerViewAdapter.onLongClickListener = {            bottomNavigationView.isVisible=true            selectedPath=it.path            onClickCallback.onLongClick(it)        }        bottomNavigationView.setOnNavigationItemSelectedListener {            onClickCallback.bottomNavigationViewClick(it.itemId, selectedPath)            true        }        updateData()    }    private fun updateData() {        val files = getDirectoryData(getFiles(path))        directoryRecyclerViewAdapter.updateData(files)    }}