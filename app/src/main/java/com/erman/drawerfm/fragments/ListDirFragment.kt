package com.erman.drawerfm.fragmentsimport android.content.Contextimport android.content.IntentFilterimport android.os.Bundleimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.fragment.app.Fragmentimport androidx.fragment.app.FragmentActivityimport androidx.localbroadcastmanager.content.LocalBroadcastManagerimport androidx.recyclerview.widget.LinearLayoutManagerimport com.erman.drawerfm.Rimport com.erman.drawerfm.adapters.DirectoryRecyclerViewAdapterimport com.erman.drawerfm.utilities.FileBroadcastReceiverimport com.erman.drawerfm.utilities.getFilesimport kotlinx.android.synthetic.main.fragment_file_list.*import java.io.Fileclass ListDirFragment : Fragment() {    private lateinit var directoryRecyclerViewAdapter: DirectoryRecyclerViewAdapter    private lateinit var path: String    private lateinit var onClickCallback: OnItemClickListener    private lateinit var fileBroadcastReceiver: FileBroadcastReceiver    interface OnItemClickListener {        fun onClick(directoryData: File)        fun onLongClick(directoryData: File)    }    companion object {        fun buildFragment(path: String, isMarqueeEnabled: Boolean): ListDirFragment {            val fragment = ListDirFragment()            val argumentBundle = Bundle()            argumentBundle.putString("path", path)            argumentBundle.putBoolean("isMarqueeEnabled", isMarqueeEnabled)            fragment.arguments = argumentBundle            return fragment        }    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        val filePath = arguments?.getString("path")        path = filePath.toString()        fileBroadcastReceiver = FileBroadcastReceiver(path) { updateData() }    }    override fun onResume() {        super.onResume()        context?.let { LocalBroadcastManager.getInstance(it).registerReceiver(fileBroadcastReceiver , IntentFilter(getString(R.string.file_broadcast_receiver))) }    }    override fun onPause() {        super.onPause()        context?.let { LocalBroadcastManager.getInstance(it).unregisterReceiver(fileBroadcastReceiver) }    }    override fun onAttach(context: Context) {        super.onAttach(context)        try {            onClickCallback = context as OnItemClickListener        } catch (e: Exception) {            throw Exception("${context} fragments.ListDirFragment.OnItemCLickListener is not implemented")        }    }    override fun onCreateView(        inflater: LayoutInflater,        container: ViewGroup?,        savedInstanceState: Bundle?    ): View? {        return inflater.inflate(R.layout.fragment_file_list, container, false)    }    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        initViews()    }    private fun initViews() {        fileListRecyclerView.layoutManager = LinearLayoutManager(context)        directoryRecyclerViewAdapter = DirectoryRecyclerViewAdapter()        fileListRecyclerView.adapter = directoryRecyclerViewAdapter        directoryRecyclerViewAdapter.onClickListener = {            onClickCallback.onClick(it)        }        directoryRecyclerViewAdapter.onLongClickListener = {            onClickCallback.onLongClick(it)        }        updateData()    }    private fun updateData() {        val files = getFiles(path)        directoryRecyclerViewAdapter.updateData(files)    }}